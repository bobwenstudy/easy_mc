#ifndef _APP_EASY_MC_CONFIG_H_
#define _APP_EASY_MC_CONFIG_H_

#include "main.h"

/* Set up for C function definitions, even when using C++ */
#ifdef __cplusplus
extern "C" {
#endif

#define EASY_MC_TIME_MS_GET HAL_GetTick
#define EASY_MC_LOG_IMPL    printf

#define EASY_MC_CONFIG_ENABLE_ARM_DSP 1

#define EASY_MC_CONFIG_ADV_TIM_CLK_MHz 170

#define EASY_MC_CONFIG_PWM_FREQUENCY 20000

// 3.3 / (4096(ADC 12bit) * 0.005(RSHUNT) * Gain(10))
#define EASY_MC_CONFIG_ADC_CONV_VALUE (0.01611328125f)

#if 1
#define EASY_MC_CONFIG_POLE_PAIRS 7

// Encoder parameters
#define EASY_MC_CONFIG_ENCODER_PPR 5120

#define EASY_MC_CONFIG_RS 0.3374f
#define EASY_MC_CONFIG_LS 0.000752f

// M = (24.6V)/ 21.765591999418080224f / (27.78Hz)
#define EASY_MC_CONFIG_MAGNETIC_FLUX_CONSTANT 0.04068481839f

#define EASY_MC_CONFIG_ZERO_ALIGN_MAX_VOLTAGE (EASY_MC_SVPWM_MAX_VOLTAGE / 5)

// #define EASY_MC_CONFIG_PID_CURRENT_KP 1.0f
// #define EASY_MC_CONFIG_PID_CURRENT_KI 50.0f
#define EASY_MC_CONFIG_PID_CURRENT_KP (EASY_MC_CONFIG_LS * EASY_MC_CURRENT_PI_BANDWIDTH * (1.0f / EASY_MC_CONFIG_VBUS_VOLTAGE))
#define EASY_MC_CONFIG_PID_CURRENT_KI (EASY_MC_CONFIG_RS * EASY_MC_CURRENT_PI_BANDWIDTH * (1.0f / EASY_MC_CONFIG_VBUS_VOLTAGE))

#define EASY_MC_CONFIG_CURRENT_MAX 15.0f

#define EASY_MC_CONFIG_PID_POSITION_KP 10.0f
#define EASY_MC_CONFIG_PID_POSITION_KI 0.1f

#else

// #define EASY_MC_CONFIG_PID_CURRENT_KP 0.38f
// #define EASY_MC_CONFIG_PID_CURRENT_KI 40.0f

#define EASY_MC_CONFIG_PID_CURRENT_KP 1.0f
#define EASY_MC_CONFIG_PID_CURRENT_KI 50.0f
#endif

// #define EASY_MC_CONFIG_DEBUG_LOG_LEVEL EASY_MC_LOG_IMPL_LEVEL_INF

/* Ends C function definitions when using C++ */
#ifdef __cplusplus
}
#endif

#endif /* _APP_EASY_MC_CONFIG_H_ */
